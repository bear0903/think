<?php
/*
 * create by TerryWang
 * 2011-6-29
 * */
require_once "PHPExcel.php";
require_once 'library/PHPExcel/IOFactory.php';
//用于写入Excel
require_once 'library/PHPExcel/Cell/AdvancedValueBinder.php';
require_once 'library/PHPExcel/Writer/Excel5.php';
require_once 'AresUpload.class.php';
require_once 'AresDir.class.php';

class AresExcel{
	const UPLOAD_DIR='../upload/excel';
	private $char='Z';  //读取Excel到最大的栏位
	 //Excel文件的上传目录
	private $upload_dir=null;
	private $excel_path=null; //Excel 文件的保存路径
	private $mode='Excel5'; //Excel的版本
	//需要用PHPExcel_Shared_Date::ExcelToPHP转换时间的栏目编号以及对应的时间格式
	//public $cols=array();
	public function __construct($upload_dir=null,$char='Z',$mode='Excel5'){
		if(!$upload_dir){
			$this->upload_dir=self::UPLOAD_DIR.'/'.date('Y').'/'.date('m').'/'.date('d');
		}else{
			$this->upload_dir=$upload_dir;
		}
		$this->char=$char;
	}
	//设置Excel文件上传目录
	public function setUploadDir($dir=null){
		$this->upload_dir=$dir;
	}
	//创建目录
	public function createDir(){
		if(!file_exists($this->upload_dir)){
			$dir=new AresDir($this->upload_dir);
			$dir->create();	
		}
	}
	//上传Excel
	public function uploadExcel(){
		$upload=new AresUpload($this->upload_dir);
		$upload->setAllowExts(array("xls"));   //允许上传的文件格式
		if($upload->_upload()){
			$uploadInfo=$upload->getUploadInfo();
			//upload_excel 为文件域的名称
			$this->excel_path=$uploadInfo["upload_excel"]["savePath"];
		}else{
			echo $upload->getErrorMsg();
		}
	}
	public function _readExcel(){
		$this->createDir();
		$this->uploadExcel();
	}
	//读取Excel文件
	public function readExcel(){
		set_time_limit(0);
		$this->_readExcel();
		if(!$this->excel_path) return false;
		$reader=PHPExcel_IOFactory::createReader($this->mode); //Excel5 读取Excel2003的文档
		$excel=$reader->load($this->excel_path);
		$sheet=$excel->getSheet(0);
		$maxRow=$sheet->getHighestRow();
		$maxColumn=$sheet->getHighestColumn();
		$max=ord($this->char)-64;
		$data=array();
		for($i=2;$i<=$maxRow;$i++){
			for($j=1;$j<=$max;$j++){
				$cell=$sheet->getCellByColumnAndRow($j-1,$i);
				$value=$cell->getValue();
				// remark by dennis 2013/10/18 不需要格式化日期，直读出来就是日期
				/*
				if(in_array($j,array_keys($this->cols))){
					$value=gmdate($this->cols[$j],PHPExcel_Shared_Date::ExcelToPHP($value));
				}*/
				//自动判断日期格式
				if($cell->getDataType()==PHPExcel_Cell_DataType::TYPE_NUMERIC){
				       $cellstyleformat=$cell->getParent()->getStyle( $cell->getCoordinate() )->getNumberFormat();
				       $formatcode=$cellstyleformat->getFormatCode();
				       if (preg_match('/^(\[\$[A-Z]*-[0-9A-F]*\])*[hmsdy]/i', $formatcode)) {
				             $value=gmdate("Y-m-d H:i:s", PHPExcel_Shared_Date::ExcelToPHP($value));
				       }else{
				             $value=PHPExcel_Style_NumberFormat::toFormattedString($value,$formatcode);
				       }
				}
				$data[$i-2][]=$value;
			}
		}
		$this->unlinkExcel();
		return $data;
	}
	//删除上传的临时Excel文件
	public function unlinkExcel(){
		@unlink($this->excel_path);
	}
	
	/**
	 * Export data to excel file (暂未用到)
	 * @param array $arr
	 * @param string $excel_info
	 */
	public function exportExcel($arr,$excel_info){
		set_time_limit(0);
		//set value binder
		PHPExcel_Cell::setValueBinder(new PHPExcel_Cell_AdvancedValueBinder());
		// 创建一个处理对象实例
		$objExcel = new PHPExcel();
		
		// 创建文件格式写入对象实例, uncomment
		$objWriter = new PHPExcel_Writer_Excel5($objExcel);    // 用于其他版本格式
		// or
		////$objWriter = new PHPExcel_Writer_Excel2007($objExcel); // 用于 2007 格式
		//$objWriter->setOffice2003Compatibility(true);
		
		//*************************************
		//设置文档基本属性
		/*$objProps = $objExcel->getProperties();
		$objProps->setCreator("Terry Wang");
		$objProps->setLastModifiedBy("Terry Wang");
		$objProps->setTitle("Office XLS Test Document");
		$objProps->setSubject("Office XLS Test Document, Demo");
		$objProps->setDescription("Test document, generated by PHPExcel.");
		$objProps->setKeywords("office excel PHPExcel");
		$objProps->setCategory("Test");*/
		
		//*************************************
		//设置当前的sheet索引，用于后续的内容操作。
		//一般只有在使用多个sheet的时候才需要显示调用。
		//缺省情况下，PHPExcel会自动创建第一个sheet被设置SheetIndex=0
		
		$objExcel->setActiveSheetIndex(0);
		$objActSheet = $objExcel->getActiveSheet();
		
		//设置当前活动sheet的名称
		$objActSheet->setTitle('Excel Faildata');
		
		//*************************************
		//设置单元格内容
		//
		//由PHPExcel根据传入内容自动判断单元格内容类型
		/*$objActSheet->setCellValue('A1', '字符串内容');  // 字符串内容
		$objActSheet->setCellValue('A2', 26);            // 数值
		$objActSheet->setCellValue('A3', true);          // 布尔值
		$objActSheet->setCellValue('A4', '=SUM(A2:A2)'); // 公式
		*/
		//标题
		$title=$excel_info['title'];
		//单元格格式,默认为文本
		$format=$excel_info['format'];
		$j=-1;
		foreach($title as $key => $val){
			$i=2;
			$j++;
			//设置标题
			$objActSheet->setCellValue($key."1",$val);
			//设置单元格宽度
			$objActSheet->getColumnDimension($key)->setAutoSize(true);
			//设置Excel内容
			foreach($arr as $one){
				//$objActSheet->setCellValue($key.$i++,$one[$j]);
				//设置格式
					switch (@$format[$key]){
						case 'date':
							$objActSheet->getCell($key.$i++)->setValue($one[$j]);
							break;
						case 'number':
							$objActSheet->getCell($key.$i++)->setValueExplicit($one[$j],PHPExcel_Cell_DataType::TYPE_NUMERIC);
							break;
						default:
							$objActSheet->getCell($key.$i++)->setValueExplicit($one[$j],PHPExcel_Cell_DataType::TYPE_STRING);
					}
			}
		}
		$now=date('YmdHis');
		$outputFileName = "faildata_{$now}.xls";
		//到文件
		////$objWriter->save($outputFileName);
		//or
		//到浏览器
		ob_clean();
		header("Content-Type: application/force-download");
		header("Content-Type: application/octet-stream");
		header("Content-Type: application/download");
		header('Content-Disposition:inline;filename="'.$outputFileName.'"');
		header("Content-Transfer-Encoding: binary");
		header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
		header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
		header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
		header("Pragma: no-cache");
		$objWriter->save('php://output');
	}
}